<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<variable name="HomeWidgetsArts">
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Container.Content(Seasons) + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!Container.Content(Episodes) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="Control.IsVisible(66) + Container.Content(Episodes)">$INFO[ListItem.ActualIcon,thumbs/,/folderback_episode_tp.png]</value>
		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_poster_tp.png]</value>
	</variable>

	<variable name="HomeWidgetsIcons">
		<value condition="String.Contains(Container(20).ListItem.Property(widgetPath),years.xml)">DefaultYear.png</value>
		<value condition="String.Contains(Container(20).ListItem.Property(widgetPath),studios.xml)">DefaultStudios.png</value>
		<value condition="String.Contains(Container(20).ListItem.Property(widgetPath),country.xml)">DefaultCountry.png</value>
		<value condition="String.Contains(Container(20).ListItem.Property(widgetPath),tags.xml)">DefaultTags.png</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>

	<variable name="HomeWidgetsGenresThumbs">
		<value condition="String.IsEqual(Container(20).ListItem.Property(widgetType),movies)">$INFO[ListItem.Label,special://skin/extras/moviesgenres/,.jpg]</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(widgetType),tvshows)">$INFO[ListItem.Label,special://skin/extras/tvshowsgenres/,.jpg]</value>
	</variable>

	<include name="HomeWidgets_Thumb">
		<param name="width">142</param>
		<param name="height">203</param>
		<definition>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture border="30">windows/home/panel_widgets.png</texture>
			</control>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true" fallback="$PARAM[fallback]">$VAR[HomeWidgetsArts]</texture>
				<bordersize>ThumbsBordersize6pix</bordersize>
			</control>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true">overlays/unwatched/banners/UnWatched_Episodes.png</texture>
				<bordersize>ThumbsBordersize6pix</bordersize>
				<visible>[Container.Content(Episodes) | [[Container.Content(Files) | Container.Content(Videos)] + [[Container.HasFolders + Container.HasFiles] | Container.HasFiles]]] + String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
			</control>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true">overlays/unwatched/thumbs/UnWatched_Poster.png</texture>
				<bordersize>ThumbsBordersize6pix</bordersize>
				<visible>![Container.Content(Episodes) | [[Container.Content(Files) | Container.Content(Videos)] + [[Container.HasFolders + Container.HasFiles] | Container.HasFiles]]] + String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
			</control>
		</definition>
	</include>

	<include name="HomeWidgets_Icon">
		<param name="width">191</param>
		<param name="height">191</param>
		<definition>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture border="30">windows/home/panel_widgets.png</texture>
			</control>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square_tp.png">$VAR[HomeWidgetsIcons]</texture>
				<bordersize>ThumbsBordersize6pix</bordersize>
				<visible>Window.IsVisible(Home) | Window.IsVisible(PlayerControls) | Window.IsVisible(script-globalsearch.xml)</visible>
			</control>
<!--
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square_tp.png">$VAR[HomeWidgetsIcons]</texture>
				<bordersize>ThumbsBordersize6pix</bordersize>
				<visible>[Window.IsVisible(Home) | Window.IsVisible(PlayerControls) | Window.IsVisible(script-globalsearch.xml)] + String.IsEmpty(ListItem.Icon)</visible>
			</control>
-->
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<colordiffuse>$PARAM[colordiffuse]</colordiffuse>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square_tp.png">$INFO[ListItem.Icon]</texture>
				<bordersize>ThumbsBordersize6pix</bordersize>
				<visible>!Window.IsVisible(Home) + !Window.IsVisible(PlayerControls) + !Window.IsVisible(script-globalsearch.xml)</visible>
			</control>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true">$VAR[AddonStatus]</texture>
				<bordersize>ThumbsBordersize6pix</bordersize>
			</control>
		</definition>
	</include>

	<include name="HomeWidgets_FocusTexture">
		<param name="width">191</param>
		<param name="height">191</param>
		<definition>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<colordiffuse>$VAR[Textures.GlobalColor]</colordiffuse>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture border="30">windows/home/focus_widgets.png</texture>
				<include>ThumbnailsFocusAnimation</include>
				<visible>!Control.HasFocus(9000)</visible>
			</control>
		</definition>
	</include>

	<include name="HomeWidgets_InLibraryTexture">
		<control type="image">
			<width>142</width>
			<height>203</height>
			<aspectratio align="center" aligny="center">stretch</aspectratio>
			<texture background="true">overlays/in_library.png</texture>
			<bordersize>ThumbsBordersize6pix</bordersize>
			<visible>!String.IsEmpty(ListItem.DBID)</visible>
		</control>
	</include>

	<include name="HomeWidgets_Poster_ItemLayout">
		<include content="HomeWidgets_Thumb">
			<param name="fallback" value="thumbs/fallback_poster_tp.png"/>
		</include>
	</include>
	<include name="HomeWidgets_Poster_Focusedlayout">
		<include content="HomeWidgets_Thumb">
			<param name="fallback" value="thumbs/fallback_poster_tp.png"/>
		</include>
		<include content="HomeWidgets_FocusTexture">
			<param name="width" value="142"/>
			<param name="height" value="203"/>
		</include>
	</include>

	<include name="HomeWidgets_Square_ItemLayout">
		<include content="HomeWidgets_Icon">
			<param name="colordiffuse" value="ffffffff"/>
		</include>
	</include>
	<include name="HomeWidgets_Square_Focusedlayout">
		<include content="HomeWidgets_Icon">
			<param name="colordiffuse" value="ffffffff"/>
			<!-- <param name="colordiffuse" value="$VAR[DiffuseColorThumbnailsViewThumbs]"/> -->
		</include>
		<include>HomeWidgets_FocusTexture</include>
	</include>

	<include name="HomeWidgets_Landsacape_ItemLayout">
		<include content="HomeWidgets_Thumb">
			<param name="width" value="232"/>
			<param name="height" value="136"/>
			<param name="fallback" value="thumbs/fallback_episode_tp.png"/>
		</include>
	</include>
	<include name="HomeWidgets_Landsacape_Focusedlayout">
		<include content="HomeWidgets_Thumb">
			<param name="width" value="232"/>
			<param name="height" value="136"/>
			<param name="fallback" value="thumbs/fallback_episode_tp.png"/>
		</include>
		<include content="HomeWidgets_FocusTexture">
			<param name="width" value="232"/>
			<param name="height" value="136"/>
		</include>
	</include>

	<include name="HomeWidgets_VideoGenres_ItemLayout">
		<control type="image">
			<width>191</width>
			<height>191</height>
			<aspectratio align="center" aligny="center">stretch</aspectratio>
			<texture border="30">windows/home/panel_widgets.png</texture>
		</control>
		<control type="image">
			<width>191</width>
			<height>191</height>
			<aspectratio align="center" aligny="center">scale</aspectratio>
			<texture background="true" fallback="special://skin/extras/moviesgenres/default.png">$VAR[HomeWidgetsGenresThumbs]</texture>
			<bordersize>ThumbsBordersize6pix</bordersize>
		</control>
	</include>
	<include name="HomeWidgets_VideoGenres_Focusedlayout">
		<control type="image">
			<width>191</width>
			<height>191</height>
			<aspectratio align="center" aligny="center">stretch</aspectratio>
			<texture border="30">windows/home/panel_widgets.png</texture>
		</control>
		<control type="image">
			<width>191</width>
			<height>191</height>
			<aspectratio align="center" aligny="center">scale</aspectratio>
			<texture background="true" fallback="special://skin/extras/moviesgenres/default.png">$VAR[HomeWidgetsGenresThumbs]</texture>
			<bordersize>ThumbsBordersize6pix</bordersize>
		</control>
		<include>HomeWidgets_FocusTexture</include>
	</include>

	<include name="HomeWidgets_MusicGenres_ItemLayout">
		<control type="image">
			<width>191</width>
			<height>191</height>
			<aspectratio align="center" aligny="center">stretch</aspectratio>
			<texture border="30">windows/home/panel_widgets.png</texture>
		</control>
		<control type="image">
			<width>191</width>
			<height>191</height>
			<aspectratio align="center" aligny="center">scale</aspectratio>
			<texture background="true"  fallback="special://skin/extras/musicgenres/default.png">$INFO[ListItem.Label,resource://resource.images.musicgenreicons.text/,.jpg]</texture>
			<bordersize>ThumbsBordersize6pix</bordersize>
		</control>
	</include>
	<include name="HomeWidgets_MusicGenres_Focusedlayout">
		<control type="image">
			<width>191</width>
			<height>191</height>
			<aspectratio align="center" aligny="center">stretch</aspectratio>
			<texture border="30">windows/home/panel_widgets.png</texture>
		</control>
		<control type="image">
			<width>191</width>
			<height>191</height>
			<aspectratio align="center" aligny="center">scale</aspectratio>
			<texture background="true"  fallback="special://skin/extras/musicgenres/default.png">$INFO[ListItem.Label,resource://resource.images.musicgenreicons.text/,.jpg]</texture>
			<bordersize>ThumbsBordersize6pix</bordersize>
		</control>
		<include>HomeWidgets_FocusTexture</include>
	</include>

	<include name="HomeWidgetList_Vars">
		<param name="top">137</param>
		<!-- <param name="movement">5</param> -->
		<definition>
			<include>OpenCloseSlideAnimationTwo</include>
			<include>HomeWidgets_VisibleHiddenAnimation</include>
			<left>45</left>
			<top>$PARAM[top]</top>
			<width>1190</width>
			<height>256</height>
			<onleft>25</onleft>
			<onright>25</onright>
			<ondown>20</ondown>
			<onup>21</onup>
			<onback>20</onback>
			<oninfo>Dialog.Close(movieinformation)</oninfo>
			<!-- <movement>$PARAM[movement]</movement> -->
			<preloaditems>4</preloaditems>
			<orientation>horizontal</orientation>
			<viewtype label="536">icon</viewtype>
			<pagecontrol></pagecontrol>
			<scrolltime tween="quadratic" easing="out">300</scrolltime>
		</definition>
	</include>

	<include name="HomeWidgetList_Poster">
		<include content="HomeWidgetList_Vars">
			<param name="top" value="125"/>
			<!-- <param name="movement" value="7"/> -->
		</include>
		<itemlayout condition="!Control.HasFocus(25) | Control.HasFocus(25)" height="256" width="149.5">
			<include>HomeWidgets_Poster_ItemLayout</include>
		</itemlayout>
		<focusedlayout condition="!Control.HasFocus(25)" height="256" width="149.5">
			<include>HomeWidgets_Poster_ItemLayout</include>
		</focusedlayout>
		<focusedlayout condition="Control.HasFocus(25)" height="256" width="149.5">
			<include>HomeWidgets_Poster_Focusedlayout</include>
		</focusedlayout>
	</include>

	<include name="HomeWidgetList_Square">
		<include>HomeWidgetList_Vars</include>
		<itemlayout condition="!Control.HasFocus(25) | Control.HasFocus(25)" height="256" width="199.5">
			<include>HomeWidgets_Square_ItemLayout</include>
		</itemlayout>
		<focusedlayout condition="!Control.HasFocus(25)" height="256" width="199.5">
			<include>HomeWidgets_Square_ItemLayout</include>
		</focusedlayout>
		<focusedlayout condition="Control.HasFocus(25)" height="256" width="199.5">
			<include>HomeWidgets_Square_Focusedlayout</include>
		</focusedlayout>
	</include>

	<include name="HomeWidgetList_Landsacape">
		<include content="HomeWidgetList_Vars">
			<param name="top" value="192"/>
		</include>
		<itemlayout condition="!Control.HasFocus(25) | Control.HasFocus(25)" height="256" width="239.4">
			<include>HomeWidgets_Landsacape_ItemLayout</include>
		</itemlayout>
		<focusedlayout condition="!Control.HasFocus(25)" height="256" width="239.4">
			<include>HomeWidgets_Landsacape_ItemLayout</include>
		</focusedlayout>
		<focusedlayout condition="Control.HasFocus(25)" height="256" width="239.4">
			<include>HomeWidgets_Landsacape_Focusedlayout</include>
		</focusedlayout>
	</include>

	<include name="HomeWidgetList_VideoGenres">
		<include>HomeWidgetList_Vars</include>
		<itemlayout condition="!Control.HasFocus(25) | Control.HasFocus(25)" height="256" width="199.5">
			<include>HomeWidgets_VideoGenres_ItemLayout</include>
		</itemlayout>
		<focusedlayout condition="!Control.HasFocus(25)" height="256" width="199.5">
			<include>HomeWidgets_VideoGenres_ItemLayout</include>
		</focusedlayout>
		<focusedlayout condition="Control.HasFocus(25)" height="256" width="199.5">
			<include>HomeWidgets_VideoGenres_Focusedlayout</include>
		</focusedlayout>
	</include>

	<include name="HomeWidgetList_MusicGenres">
		<include>HomeWidgetList_Vars</include>
		<itemlayout condition="!Control.HasFocus(25) | Control.HasFocus(25)" height="256" width="199.5">
			<include>HomeWidgets_MusicGenres_ItemLayout</include>
		</itemlayout>
		<focusedlayout condition="!Control.HasFocus(25)" height="256" width="199.5">
			<include>HomeWidgets_MusicGenres_ItemLayout</include>
		</focusedlayout>
		<focusedlayout condition="Control.HasFocus(25)" height="256" width="199.5">
			<include>HomeWidgets_MusicGenres_Focusedlayout</include>
		</focusedlayout>
	</include>


	<!-- ================= -->
	<!-- == HomeWidgets == -->
	<!-- ================= -->
	<include name="HomeWidgets_Lists">
		<control type="group" id="22">
			<include condition="!Skin.HasSetting(AutoHideHomeWidgets)">HomeWidgets_AutoHideAnimationON</include>
			<include condition="Skin.HasSetting(AutoHideHomeWidgets)">HomeWidgets_AutoHideAnimationOFF</include>
			<include>skinshortcuts-template-widget</include>
			<!-- Navigation Arrows -->
			<control type="image">
				<left>-3</left>
				<top>205</top>
				<include>WidgetsArrow_Left</include>
				<include>OpenCloseSlideAnimationTwo</include>
				<visible>ControlGroup(22).HasFocus + Container(25).HasPrevious</visible>
				<animation effect="slide" start="0,0" end="0,30" condition="String.IsEqual(Container(20).ListItem.Property(Widget),RSSVideoFeeds)">Conditional</animation>
			</control>
			<control type="image">
				<left>1232</left>
				<top>205</top>
				<include>WidgetsArrow_Right</include>
				<include>OpenCloseSlideAnimationTwo</include>
				<visible>ControlGroup(22).HasFocus + Container(25).HasNext</visible>
				<animation effect="slide" start="0,0" end="0,30" condition="String.IsEqual(Container(20).ListItem.Property(Widget),RSSVideoFeeds)">Conditional</animation>
			</control>
			<!-- Info Labels -->
			<control type="group">
				<left>45</left>
				<top>300</top>
				<include>HomeMenu_OpenCloseSlideAnimation</include>
				<visible>ControlGroup(22).HasFocus</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="0,0" end="0,55" time="230" tween="sine" easing="out" />
					<effect type="fade" start="0" end="100" time="230" tween="sine" easing="out"/>
				</animation>
				<animation type="Hidden"  reversible="false">
					<effect type="slide" start="0,55" end="0,0" time="300" tween="sine" easing="out" />
					<effect type="fade" start="100" end="0" time="240" tween="sine" easing="out"/>
				</animation>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<height>30</height>
					<width>1185</width>
					<font>FontSize_36</font>
					<textcolor>white</textcolor>
					<shadowcolor>99000000</shadowcolor>
					<align>left</align>
					<aligny>center</aligny>
					<label>$VAR[HomeWidgetsListItemLabel]</label>
				</control>
				<control type="image">
					<left>0</left>
					<top>36</top>
					<width>38</width>
					<height>24</height>
					<colordiffuse>homeinfo</colordiffuse>
					<aspectratio>keep</aspectratio>
					<texture background="true">$VAR[HomeWidgetsHDFlags]</texture>
					<visible>![String.IsEqual(Container(20).ListItem.Property(widgetType),movies_online) | String.IsEqual(Container(20).ListItem.Property(widgetType),tvshows_online) | String.IsEqual(Container(20).ListItem.Property(widgetType),music_online) | String.IsEqual(Container(20).ListItem.Property(widgetType),mixed_online)]</visible>
				</control>
				<control type="label">
					<left>1</left>
					<top>35</top>
					<height>25</height>
					<width>1185</width>
					<font>FontSize_20</font>
					<textcolor>homeinfo</textcolor>
					<align>left</align>
					<aligny>center</aligny>
					<label>$VAR[HomeWidgetsListItemLabel2]</label>
					<visible>![String.IsEqual(Container(20).ListItem.Property(widgetType),movies_online) | String.IsEqual(Container(20).ListItem.Property(widgetType),tvshows_online) | String.IsEqual(Container(20).ListItem.Property(widgetType),music_online) | String.IsEqual(Container(20).ListItem.Property(widgetType),mixed_online)]</visible>
					<animation effect="slide" start="0,0" end="43,0" condition="[Control.HasFocus(25) + !String.IsEmpty(Container(25).ListItem.VideoResolution)]">Conditional</animation>
				</control>
				<!-- NextAired Label3 -->
				<control type="grouplist">
					<left>1</left>
					<top>63</top>
					<height>0</height>
					<width>1000</width>
					<align>left</align>
					<orientation>horizontal</orientation>
					<visible>String.IsEqual(Container(20).ListItem.Property(Widget),NextAiredTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),UnAiredTVShows)</visible>
					<control type="image">
						<width>22</width>
						<height>22</height>
						<colordiffuse>homeinfo</colordiffuse>
						<aspectratio aligny="center" align="center">stretch</aspectratio>
						<texture background="true">icons/calendar.png</texture>
						<!-- <visible>!String.IsEmpty(Container(25).ListItem.Property(NextDay))</visible> -->
						<!-- <visible>!String.IsEmpty(Container(25).ListItem.Property(NextAiredDateTime))</visible> -->
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<!-- <label>$INFO[Container(25).ListItem.Property(AirDay),,$COMMA]$INFO[Container(25).ListItem.Property(AirDate.Long)]$INFO[Container(25).ListItem.Studio, on ]</label> -->
						<label>$INFO[Container(25).ListItem.Property(AirDay),,$COMMA ]$INFO[Container(25).ListItem.Property(AirDate)]$INFO[Container(25).ListItem.Property(AirTime), at ]$INFO[Container(25).ListItem.Studio, on ]</label>
					</control>
				</control>

				<!-- TMDB & Trakt Label2 -->
				<control type="grouplist">
					<left>1</left>
					<top>35</top>
					<height>0</height>
					<width>1000</width>
					<align>left</align>
					<orientation>horizontal</orientation>
					<visible>String.IsEqual(Container(20).ListItem.Property(widgetType),movies_online) | String.IsEqual(Container(20).ListItem.Property(widgetType),tvshows_online)</visible>
					<control type="image">
						<width>22</width>
						<height>22</height>
						<colordiffuse>homeinfo</colordiffuse>
						<aspectratio aligny="center" align="center">stretch</aspectratio>
						<texture background="true">icons/calendar.png</texture>
						<visible>!String.IsEmpty(Container(25).ListItem.Premiered)</visible>
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[Container(25).ListItem.Premiered]   </label>
					</control>
					<control type="image">
						<width>22</width>
						<height>22</height>
						<colordiffuse>homeinfo</colordiffuse>
						<aspectratio aligny="center" align="center">stretch</aspectratio>
						<texture background="true">icons/star_rating.png</texture>
						<visible>Integer.IsGreater(Container(25).ListItem.Rating,0)</visible>
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[Container(25).ListItem.Rating]$INFO[Container(25).ListItem.Votes, (, $LOCALIZE[205])]   </label>
						<visible>Integer.IsGreater(Container(25).ListItem.Rating,0)</visible>
					</control>
					<control type="image">
						<width>22</width>
						<height>22</height>
						<colordiffuse>homeinfo</colordiffuse>
						<aspectratio aligny="center" align="center">stretch</aspectratio>
						<texture background="true">icons/watchers.png</texture>
						<visible>Integer.IsGreater(Container(25).ListItem.Property(Watchers),0)</visible>
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[Container(25).ListItem.Property(Watchers),, People Watching]</label>
						<visible>Integer.IsGreater(Container(25).ListItem.Property(Watchers),0)</visible>
					</control>
				</control>

				<!-- Last.fm Near Concerts Label2 -->
				<control type="grouplist">
					<left>1</left>
					<top>35</top>
					<height>0</height>
					<width>1000</width>
					<align>left</align>
					<orientation>horizontal</orientation>
					<visible>String.IsEqual(Container(20).ListItem.Property(Widget),NearConcerts)</visible>
					<control type="image">
						<width>22</width>
						<height>22</height>
						<colordiffuse>homeinfo</colordiffuse>
						<aspectratio aligny="center" align="center">stretch</aspectratio>
						<texture background="true">icons/location.png</texture>
						<visible>!String.IsEmpty(Container(25).ListItem.Property(City))</visible>
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[Container(25).ListItem.Property(Name)]$INFO[Container(25).ListItem.Property(Street),$COMMA ]$INFO[Container(25).ListItem.Property(City),$COMMA ]</label>
					</control>
				</control>
				<!-- Last.fm Near Concerts Label3 -->
				<control type="grouplist">
					<left>1</left>
					<top>63</top>
					<height>0</height>
					<width>1000</width>
					<align>left</align>
					<orientation>horizontal</orientation>
					<visible>String.IsEqual(Container(20).ListItem.Property(Widget),NearConcerts)</visible>
					<control type="image">
						<width>22</width>
						<height>22</height>
						<colordiffuse>homeinfo</colordiffuse>
						<aspectratio aligny="center" align="center">stretch</aspectratio>
						<texture background="true">icons/calendar.png</texture>
						<visible>!String.IsEmpty(Container(25).ListItem.Property(Date))</visible>
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[Container(25).ListItem.Property(Date)]</label>
					</control>
				</control>

				<!-- Last.fm Top Artists Label2 -->
				<control type="grouplist">
					<left>1</left>
					<top>35</top>
					<height>0</height>
					<width>1000</width>
					<align>left</align>
					<orientation>horizontal</orientation>
					<visible>String.IsEqual(Container(20).ListItem.Property(Widget),TopArtists)</visible>
					<control type="image">
						<width>22</width>
						<height>22</height>
						<colordiffuse>homeinfo</colordiffuse>
						<aspectratio aligny="center" align="center">stretch</aspectratio>
						<texture background="true">icons/listeners.png</texture>
						<visible>Integer.IsGreater(Container(25).ListItem.Property(Listeners),0)</visible>
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[Container(25).ListItem.Property(Listeners),,  $LOCALIZE[15200] $LOCALIZE[20455]]</label>
					</control>
				</control>

				<!-- YouTube RSS Video Feeds Label2 -->
				<control type="grouplist">
					<left>1</left>
					<top>35</top>
					<height>0</height>
					<width>1000</width>
					<align>left</align>
					<orientation>horizontal</orientation>
					<visible>String.IsEqual(Container(20).ListItem.Property(Widget),RSSVideoFeeds)</visible>
					<control type="image">
						<width>22</width>
						<height>22</height>
						<colordiffuse>homeinfo</colordiffuse>
						<aspectratio aligny="center" align="center">stretch</aspectratio>
						<texture background="true">icons/calendar.png</texture>
						<visible>!String.IsEmpty(Container(25).ListItem.Premiered)</visible>
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[Container(25).ListItem.Premiered]</label>
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[Container(25).ListItem.Duration]</label>
					</control>
				</control>

				<!-- Weather Label2 -->
				<control type="grouplist">
					<left>1</left>
					<top>35</top>
					<height>0</height>
					<width>1000</width>
					<align>left</align>
					<itemgap>0</itemgap>
					<orientation>horizontal</orientation>
					<visible>String.IsEqual(Container(20).ListItem.Property(widgetType),Weather)</visible>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>[CAPITALIZE]$INFO[Container(25).ListItem.Property(Outlook),,$COMMA][/CAPITALIZE]</label>
					</control>
					<control type="image">
						<width>13</width>
						<visible>!String.IsEmpty(Container(25).ListItem.Property(Outlook))</visible>
					</control>
					<control type="image">
						<width>10</width>
						<height>22</height>
						<colordiffuse>homeinfo</colordiffuse>
						<aspectratio aligny="center" align="center">keep</aspectratio>
						<texture background="true">icons/temp_high.png</texture>
						<visible>!String.IsEmpty(Container(25).ListItem.Property(HighTemperature))</visible>
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[Container(25).ListItem.Property(HighTemperature),,$COMMA]</label>
					</control>
					<control type="image">
						<width>13</width>
						<visible>!String.IsEmpty(Container(25).ListItem.Property(HighTemperature))</visible>
					</control>
					<control type="image">
						<width>10</width>
						<height>22</height>
						<colordiffuse>homeinfo</colordiffuse>
						<aspectratio aligny="center" align="center">keep</aspectratio>
						<texture background="true">icons/temp_low.png</texture>
						<visible>!String.IsEmpty(Container(25).ListItem.Property(LowTemperature))</visible>
					</control>
					<control type="label">
						<height>24</height>
						<width>auto</width>
						<font>FontSize_20</font>
						<textcolor>homeinfo</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[Container(25).ListItem.Property(LowTemperature)]</label>
					</control>
				</control>
			</control>


			<!-- Data Providers Info -->
			<control type="group">
				<include>HomeMenu_OpenCloseSlideAnimation</include>
				<visible>ControlGroup(22).HasFocus + !Skin.HasSetting(HideExtraInfo)</visible>
				<visible>String.IsEqual(Container(20).ListItem.Property(widgetType),weather) | String.IsEqual(Container(20).ListItem.Property(widgetType),movies_online) | String.IsEqual(Container(20).ListItem.Property(widgetType),tvshows_online) | String.IsEqual(Container(20).ListItem.Property(widgetType),music_online) | String.IsEqual(Container(20).ListItem.Property(widgetType),mixed_online) | String.IsEqual(Container(20).ListItem.Property(Widget),MovieTrailers)</visible>
				<animation type="Visible" reversible="false">
					<effect type="slide" start="0,0" end="0,55" time="230" tween="sine" easing="out" />
					<effect type="fade" start="0" end="100" time="230" tween="sine" easing="out"/>
				</animation>
				<animation type="Hidden"  reversible="false">
					<effect type="slide" start="0,55" end="0,0" time="300" tween="sine" easing="out" />
					<effect type="fade" start="100" end="0" time="240" tween="sine" easing="out"/>
				</animation>
				<control type="image">
					<left>40</left>
					<top>385</top>
					<width>270</width>
					<height>90</height>
					<colordiffuse>homeinfo</colordiffuse>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture>$INFO[Window(Weather).Property(WeatherProviderLogo)]</texture>
					<visible>String.IsEqual(Container(20).ListItem.Property(widgetType),weather)</visible>
				</control>
				<control type="grouplist">
					<left>40</left>
					<top>400</top>
					<width>490</width>
					<height>68</height>
					<align>left</align>
					<itemgap>2</itemgap>
					<orientation>horizontal</orientation>
					<visible>!String.IsEqual(Container(20).ListItem.Property(widgetType),weather)</visible>
					<control type="image">
						<width>68</width>
						<height>68</height>
						<aspectratio>stretch</aspectratio>
						<texture background="true">$VAR[HomeWidgetsDataProvidersIcons]</texture>
						<colordiffuse>homeinfo</colordiffuse>
					</control>
					<control type="group">
						<width>490</width>
						<control type="label">
							<top>15</top>
							<width>490</width>
							<height>15</height>
							<font>FontSize_20B</font>
							<label>$LOCALIZE[31230]</label>
							<textcolor>homeinfo</textcolor>
							<scroll>false</scroll>
						</control>
						<control type="label">
							<top>35</top>
							<width>490</width>
							<height>15</height>
							<font>FontSize_20</font>
							<label>$VAR[HomeWidgetsDataProvidersLabels]</label>
							<textcolor>homeinfo</textcolor>
							<scroll>false</scroll>
						</control>
					</control>
				</control>
			</control>
		</control>
	</include>

	<include name="HomeWidgets_ContentInfo">
		<control type="group">
			<left>45</left>
			<top>25</top>
			<include>ShutdownMenuAnimation</include>
			<include>OpenCloseSlideAnimationTwo</include>
			<include>TopRightSlideAnimations</include>
			<include>InfoDialogs_ContentInfoAnimation</include>
			<visible>ControlGroup(22).HasFocus()</visible>
			<control type="grouplist">
				<left>0</left>
				<top>0</top>
				<height>70</height>
				<width>1000</width>
				<align>left</align>
				<itemgap>15</itemgap>
				<orientation>horizontal</orientation>
				<include>LogoBig</include>
				<control type="label">
					<include>TopBigLabel</include>
					<label>$VAR[HomeWidgetsHeaderLabels]</label>
				</control>
			</control>
			<control type="label">
				<description>Page Count Label</description>
				<left>66</left>
				<top>45</top>
				<width>300</width>
				<height>20</height>
				<font>FontSize_18</font>
				<textcolor>$VAR[Text.GlobalColor]</textcolor>
				<scroll>false</scroll>
				<align>left</align>
				<aligny>center</aligny>
				<label>$VAR[ContainerNumItems]</label>
			</control>
		</control>
	</include>

	<include name="WidgetsArrow_Left">
		<width>50</width>
		<height>50</height>
		<colordiffuse>$VAR[Textures.GlobalColor]</colordiffuse>
		<texture>icons/arrow_widgets_left.png</texture>
	</include>
	<include name="WidgetsArrow_Right">
		<width>50</width>
		<height>50</height>
		<texture>icons/arrow_widgets_right.png</texture>
	</include>

	<variable name="HomeWidgetContent_Top250Movies">
		<value condition="!Window.IsVisible(3050)">special://skin/extras/playlists/Top250Movies.xsp</value>
	</variable>

	<variable name="HomeWidgetsHeaderLabels">
		<value condition="Control.HasFocus(150)">$VAR[QuickNav_WidgetName]</value>
		<value condition="Control.HasFocus(200)">$VAR[QuickNav_WidgetNameMovies]</value>
		<value condition="Control.HasFocus(250)">$VAR[QuickNav_WidgetNameTVShows]</value>
		<value condition="Control.HasFocus(300)">$VAR[QuickNav_WidgetNameMusic]</value>
		<value condition="ControlGroup(100).HasFocus">$LOCALIZE[31316]...</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),RSSVideoFeeds)">$LOCALIZE[31255]: $INFO[Skin.String(RSSVideoFeedURL.Label)]</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),Weather10DaysForecast)">$LOCALIZE[10508]: $INFO[Window(Weather).Property(Current.Location)]</value>
		<value>$INFO[Container(20).ListItem.Property(widgetName)]</value>
	</variable>

	<variable name="HomeWidgetsListItemLabel">
		<value condition="Control.HasFocus(25) + !String.IsEmpty(Container(25).ListItem.TVShowTitle)">$INFO[Container(25).ListItem.TVShowTitle]</value>
		<value condition="Control.HasFocus(25) + [String.IsEqual(Container(20).ListItem.Property(widgetName),albums) | String.IsEqual(Container(20).ListItem.Property(widgetType),music) | [String.IsEqual(Container(20).ListItem.Property(widget),Playlist) + String.IsEqual(Container(20).ListItem.Property(widgetType),albums)]] + !String.IsEmpty(Container(25).ListItem.Year)">$INFO[Container(25).ListItem.Label]$INFO[Container(25).ListItem.Year, (,)]</value>
		<value condition="Control.HasFocus(25) + String.IsEqual(Container(20).ListItem.Property(widgetType),musicvideos) + !String.IsEmpty(Container(25).ListItem.Label)">$INFO[Container(25).ListItem.Label]$INFO[Container(25).ListItem.Artist, - ]</value>
		<value condition="Control.HasFocus(25) + String.IsEqual(Container(20).ListItem.Property(widgetType),Weather) + ![String.IsEmpty(Container(25).ListItem.Label) | String.IsEmpty(Window(Weather).Property(Current.Condition))]">$INFO[Container(25).ListItem.Label]$INFO[Container(25).ListItem.Label2,$COMMA ]</value>
		<value condition="Control.HasFocus(25) + !String.IsEmpty(Container(25).ListItem.Label)">$INFO[Container(25).ListItem.Label]</value>
		<value condition="Control.HasFocus(25) + !String.IsEmpty(Container(25).ListItem.Property(EventName))">$INFO[Container(25).ListItem.Property(EventName)]</value>
		<value condition="Control.HasFocus(25) + !String.IsEmpty(Container(25).ListItem.Label) + String.IsEqual(Container(20).ListItem.Property(widgetType),music_online)">$INFO[Container(25).ListItem.Label]</value>
		<value condition="Window.IsVisible(PlayerControls) + ControlGroup(100).HasFocus">$VAR[PlayerTitleLabel]</value>
		<value condition="Control.HasFocus(150)">$INFO[Container(150).ListItem.Label]</value>
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Label]</value>
		<value condition="Control.HasFocus(250)">$INFO[Container(250).ListItem.TVShowTitle]</value>
		<value condition="Control.HasFocus(300)">$INFO[Container(300).ListItem.Label]$INFO[Container(300).ListItem.Year, (,)]</value>
		<value condition="Control.HasFocus(350)">$INFO[Container(350).ListItem.Label]</value>
	</variable>

	<variable name="HomeWidgetsListItemLabel2">
		<!-- <value condition="Control.HasFocus(25) + String.IsEqual(Container(20).ListItem.Property(widgetType),Weather) + !String.IsEmpty(Container(25).ListItem.Label)">[CAPITALIZE]$INFO[Container(25).ListItem.Property(Outlook)][/CAPITALIZE]$COMMA $INFO[Container(25).ListItem.Property(HighTemperature),$LOCALIZE[419]:,]$COMMA $INFO[Container(25).ListItem.Property(LowTemperature),$LOCALIZE[418]:,]</value> -->
		<value condition="Control.HasFocus(25) + [String.IsEqual(Container(20).ListItem.Property(widget),NextAiredTVShows) | String.IsEqual(Container(20).ListItem.Property(widget),UnAiredTVShows)]">$INFO[Container(25).ListItem.Season]$INFO[Container(25).ListItem.Episode,x,. ]$INFO[Container(25).ListItem.Title]</value>
		<value condition="Control.HasFocus(25) + ![String.IsEmpty(Container(25).ListItem.Episode) | String.IsEmpty(Container(25).ListItem.Property(UnWatchedEpisodes))]">$INFO[Container(25).ListItem.Episode,, $LOCALIZE[20360]]$INFO[Container(25).ListItem.Property(UnWatchedEpisodes),$COMMA , $LOCALIZE[16101]]</value>
		<value condition="Control.HasFocus(25) + !String.IsEmpty(Container(25).ListItem.Episode)">$INFO[Container(25).ListItem.Season]$INFO[Container(25).ListItem.Episode,x,. ]$INFO[Container(25).ListItem.Title]</value>
		<value condition="Control.HasFocus(25) + ![String.IsEmpty(Container(25).ListItem.Year) | String.IsEmpty(Container(25).ListItem.Rating) | String.IsEmpty(Container(25).ListItem.Duration)]">$INFO[Container(25).ListItem.Year]$INFO[Container(25).ListItem.Rating, • ]$INFO[Container(25).ListItem.Duration, • ,]</value>
		<value condition="Control.HasFocus(25) + [String.IsEqual(Container(20).ListItem.Property(widgetType),albums) | String.IsEqual(Container(20).ListItem.Property(widgetType),music)] + !String.IsEmpty(Container(25).ListItem.Artist)">$INFO[Container(25).ListItem.Artist]</value>
		<value condition="Control.HasFocus(25) + [String.IsEqual(Container(20).ListItem.Property(widget),Library) + String.IsEqual(Container(20).ListItem.Property(widgetType),Songs)] + !String.IsEmpty(Container(25).ListItem.Artist)">$INFO[Container(25).ListItem.Album]$INFO[Container(25).ListItem.Artist, - ]</value>
		<value condition="Control.HasFocus(25) + String.IsEqual(Container(20).ListItem.Property(widgetType),pvr) + !String.IsEmpty(Container(25).ListItem.Title)">$INFO[Container(25).ListItem.Title]</value>
		<value condition="Window.IsVisible(PlayerControls) + ControlGroup(100).HasFocus">$VAR[PlayerSubLabel]</value>
		<value condition="Control.HasFocus(200)">$INFO[Container(200).ListItem.Year]$INFO[Container(200).ListItem.Rating, • ]$INFO[Container(200).ListItem.Duration, • ,]</value>
		<value condition="Control.HasFocus(250)">$INFO[Container(250).ListItem.Season]$INFO[Container(250).ListItem.Episode,x,. ]$INFO[Container(250).ListItem.Title]</value>
		<value condition="Control.HasFocus(300)">$INFO[Container(300).ListItem.Artist]</value>
	</variable>

	<variable name="HomeWidgetsHDFlags">
		<value condition="Control.HasFocus(25) + Integer.IsGreater(Container(25).ListItem.VideoResolution,1080)">flags/def/4k.png</value>
		<value condition="Control.HasFocus(25) + Integer.IsGreater(Container(25).ListItem.VideoResolution,719)">flags/def/hd.png</value>
		<value condition="Control.HasFocus(25) + !String.IsEmpty(Container(25).ListItem.VideoResolution)">flags/def/sd.png</value>
	</variable>

	<variable name="HomeWidgetsDataProvidersIcons">
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),InCinemasMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),UpcomingMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),PopularMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),TopRatedMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),PopularTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),TopRatedTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),AiringTodayTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),OnAirTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),PopularPeople)">icons/tmdb.png</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),MovieTrailers)">$INFO[system.addonicon(Skin.String(TrailersAddon_Path))]</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),TrendingMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),MostWatchedMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),MostAnticipatedMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),BoxOfficeMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),TrendingTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),MostWatchedTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),MostAnticipatedTVShows)">icons/trakt.png</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),NearConcerts) | String.IsEqual(Container(20).ListItem.Property(Widget),TopArtists)">icons/lastfm.png</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),RSSVideoFeeds)">icons/youtube.png</value>
	</variable>

	<variable name="HomeWidgetsDataProvidersLabels">
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),InCinemasMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),UpcomingMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),PopularMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),TopRatedMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),PopularTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),TopRatedTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),AiringTodayTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),OnAirTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),PopularPeople)">The MovieDB</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),MovieTrailers)">$INFO[system.addontitle(Skin.String(TrailersAddon_Path))]</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),TrendingMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),MostWatchedMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),MostAnticipatedMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),BoxOfficeMovies) | String.IsEqual(Container(20).ListItem.Property(Widget),TrendingTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),MostWatchedTVShows) | String.IsEqual(Container(20).ListItem.Property(Widget),MostAnticipatedTVShows)">Trakt.tv</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),NearConcerts) | String.IsEqual(Container(20).ListItem.Property(Widget),TopArtists)">Last.fm</value>
		<value condition="String.IsEqual(Container(20).ListItem.Property(Widget),RSSVideoFeeds)">YouTube</value>
	</variable>

	<variable name="RSSVideoFeedType">
		<value condition="String.IsEqual(Skin.String(RSSVideoFeedType),Channel)">plugin://script.extendedinfo?info=youtubeplaylistvideos&amp;&amp;id=$INFO[Skin.String(RSSVideoFeedURL)]</value>
		<value condition="String.IsEqual(Skin.String(RSSVideoFeedType),User)">plugin://script.extendedinfo?info=youtubeusersearchvideos&amp;&amp;id=$ESCINFO[Skin.String(RSSVideoFeedURL)]</value>
	</variable>

	<variable name="CustomItemNumber">
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem1)">1</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem2)">2</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem3)">3</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem4)">4</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem5)">5</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem6)">6</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem7)">7</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem8)">8</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem9)">9</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem10)">10</value>
	</variable>

	<variable name="CustomItemLabel">
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem1)">$INFO[Skin.String(CustomItem.1.Label)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem2)">$INFO[Skin.String(CustomItem.2.Label)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem3)">$INFO[Skin.String(CustomItem.3.Label)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem4)">$INFO[Skin.String(CustomItem.4.Label)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem5)">$INFO[Skin.String(CustomItem.5.Label)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem6)">$INFO[Skin.String(CustomItem.6.Label)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem7)">$INFO[Skin.String(CustomItem.7.Label)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem8)">$INFO[Skin.String(CustomItem.8.Label)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem9)">$INFO[Skin.String(CustomItem.9.Label)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem10)">$INFO[Skin.String(CustomItem.10.Label)]</value>
	</variable>

	<variable name="CustomItemThumb">
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem1)">$INFO[Skin.String(CustomItem.1.Thumb)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem2)">$INFO[Skin.String(CustomItem.2.Thumb)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem3)">$INFO[Skin.String(CustomItem.3.Thumb)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem4)">$INFO[Skin.String(CustomItem.4.Thumb)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem5)">$INFO[Skin.String(CustomItem.5.Thumb)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem6)">$INFO[Skin.String(CustomItem.6.Thumb)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem7)">$INFO[Skin.String(CustomItem.7.Thumb)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem8)">$INFO[Skin.String(CustomItem.8.Thumb)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem9)">$INFO[Skin.String(CustomItem.9.Thumb)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem10)">$INFO[Skin.String(CustomItem.10.Thumb)]</value>
	</variable>

	<variable name="CustomItemPath">
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem1)">$INFO[Skin.String(CustomItem.1.Path)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem2)">$INFO[Skin.String(CustomItem.2.Path)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem3)">$INFO[Skin.String(CustomItem.3.Path)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem4)">$INFO[Skin.String(CustomItem.4.Path)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem5)">$INFO[Skin.String(CustomItem.5.Path)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem6)">$INFO[Skin.String(CustomItem.6.Path)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem7)">$INFO[Skin.String(CustomItem.7.Path)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem8)">$INFO[Skin.String(CustomItem.8.Path)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem9)">$INFO[Skin.String(CustomItem.9.Path)]</value>
		<value condition="String.IsEqual(Window(SkinSettings).Property(EditCustomItems),customitem10)">$INFO[Skin.String(CustomItem.10.Path)]</value>
	</variable>


</includes>
